#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/worker
LOG_DIR=/var/vcap/sys/log/worker

mkdir -p $RUN_DIR
chown -R vcap:vcap $RUN_DIR

mkdir -p $LOG_DIR
chown -R vcap:vcap $LOG_DIR

exec 3>&1 # make stdout available as fd 3 for the drain result
exec 1>>$LOG_DIR/drain.stdout.log
exec 2>>$LOG_DIR/drain.stderr.log

shutdown_flag=""

if [ "$1" == "job_shutdown" ]; then
  shutdown_flag="--shutdown"
fi

<%
  tsa_addrs = nil
  tsa_port = nil

  if_p("tsa.host", "tsa.port") do |host, port|
    tsa_addrs = [host]
    tsa_port = port
  end

  if tsa_addrs.nil? && tsa_port.nil?
    tsa = link("tsa")
    tsa_addrs = tsa.instances.collect(&:address)
    tsa_port = tsa.p("bind_port")
  end
%>

WORKER_KEY=/var/vcap/jobs/worker/config/worker_key
chown vcap:vcap $WORKER_KEY
chmod 0400 $WORKER_KEY

KNOWN_HOSTS=/var/vcap/jobs/worker/config/known_hosts
chown vcap:vcap $KNOWN_HOSTS

WORKER_VERSION=$(cat /var/vcap/packages/worker_version/version)

cat /var/vcap/jobs/worker/config/worker.json | \
  sed -e "s/HOSTNAME_REPLACE_ME/$(hostname | cut -d '-' -f 2-)/g" | \
  sed -e 's/"START_TIME_REPLACE_ME"/'$(date +%s)'/g' | \
  sed -e "s/WORKER_VERSION_REPLACE_ME/${WORKER_VERSION}/g" | \
  /var/vcap/packages/resource_discovery/bin/resource_discovery /var/vcap/packages/*/resource_metadata.json > \
  $RUN_DIR/worker.json

chpst -u vcap:vcap /var/vcap/packages/worker/bin/worker \
  drain \
  <% tsa_addrs.each do |tsa_addr| %> \
  --tsa-addr <%= tsa_addr %>:<%= tsa_port %> \
  <% end %> \
  --worker-config-file $RUN_DIR/worker.json \
  --user-known-hosts-file ${KNOWN_HOSTS} \
  --tsa-ssh-key $WORKER_KEY \
  --beacon-pid-file=$RUN_DIR/beacon.pid \
  <% if_p("drain_timeout") do |drain_timeout| %> \
  --timeout=<%= drain_timeout %> \
  <% end %> \
  $shutdown_flag \

echo 0 >&3
